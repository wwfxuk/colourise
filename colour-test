#!/bin/bash
set -euf -o pipefail

function echo-help() {
  cat << EOF

Usage: color-test [-1] [-2] [-3]

Test current terminal's colour/text capabilities.

If no arguments are given, all tests will be output.

Options:

  -1 --retro        Test old-school, retro 4-bit colours and styles.
  -2 --combo        Test basic combinations of 8-bit colour.
  -3 --pretty       Test palette style combinations of 8-bit colour.

EOF
}

function retro() {
  echo '#####################################################################'
  echo '## 1. Retro 4 bit Colour ############################################'
  echo
  echo 'Substitute <COLOR_STR> in "\e[<COLOR_STR>m" ("\e[0m" to reset)'
  echo 'e.g. echo -e "A\e[34m COLOURED \e[0mword"'
  echo
  echo '#####################################################################'
  for color in {0..128}
  do
    echo -en "\e[${color}m"
    printf "%5s  " "${color}"
    echo -en "\e[0m "

    if [ $(((${color} + 1) % 10)) == 0 ]
    then
      echo
    fi
  done
  echo
  echo
  echo
  echo
}


function combo() {
  echo '---------------------------------------------------------------------'
  echo '-- 2. Basic 8-bit ---------------------------------------------------'
  echo
  echo 'Substitute <COLOR_STR> in "\e[<COLOR_STR>m" ("\e[0m" to reset)'
  echo 'e.g. echo -e "A\e[7;104;35m COLOURED \e[0mword"'
  echo
  echo '---------------------------------------------------------------------'
  for clbg in {40..47} {100..107} 49
  do
    for clfg in {30..37} {90..97} 39
    do
      for attr in 0 1 2 4 5 7
      do
        echo -en "\e[${attr};${clbg};${clfg}m";
        printf "%10s  " "${attr};${clbg};${clfg}";
        echo -en "\e[0m ";
      done
      echo
    done
  done
  echo
  echo
  echo
}

function pretty() {
  echo '====================================================================='
  echo '== 3. 8-bit palettes ================================================'
  echo
  echo 'Substitute <COLOR_STR> in "\e[<COLOR_STR>m" ("\e[0m" to reset)'
  echo 'e.g. echo -e "A\e[48;5;166m COLOURED \e[0mword"'
  echo
  echo '====================================================================='
  for fgbg in 38 48
  do
    echo
    if [ $fgbg -eq 38 ]
    then
      echo '== Foreground ======================================================='
    else
      echo '== Background ======================================================='
    fi

    for color in {0..15} {232..255}
    do # Standard colors, black greyscale
      echo -en "\e[${fgbg};5;${color}m"
      printf "%10s  " "${fgbg};5;${color}"
      echo -en "\e[0m "

      if [ $((($color + 1) % 8)) == 0 ]
      then
        echo
      fi
    done

    echo
    for colorx in {16..51}
    do # Standard colors
      for colory in {0..4}
      do
        color=$((colorx + (36 * colory)))

        echo -en "\e[${fgbg};5;${color}m";
        printf "%10s  " "${fgbg};5;${color}";
        echo -en "\e[0m ";
      done
      echo
    done
  done
  echo
  echo
  echo
}


clear
if [ $# -eq 0 ]
then
  retro
  combo
  pretty
else
  for ARG in "$@"
  do
    case "${ARG}" in
      # --help)
      #   help
      #   return 0
      # ;;
      -1|--retro) retro;;
      -2|--combo) combo;;
      -3|--pretty) pretty;;
    esac
    shift
  done
fi
echo 'See: SGR in https://en.wikipedia.org/wiki/ANSI_escape_code#CSI_codes'